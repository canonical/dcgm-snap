name: dcgm
base: core24
adopt-info: dcgm
summary: Snap for NVIDIA DCGM and DCGM exporter
license: Apache-2.0
contact: solutions-engineering@lists.canonical.com
description: |
  This snap includes NVIDIA DCGM and DCGM exporter to provide GPU monitoring via Prometheus metrics.
platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]
grade: stable
confinement: strict
source-code: https://github.com/canonical/dcgm-snap
issues: https://github.com/canonical/dcgm-snap/issues
title: NVIDIA DCGM

apps:
  dcgm-exporter:
    command: run_dcgm_exporter.sh
    plugs:
      - network-bind
      - opengl
    daemon: simple
    # As this is a dcgm snap, not the dcgm-exporter snap,
    # user might not be interested in running dcgm-exporter, so disable it by default
    install-mode: disable
    restart-condition: on-failure
  dcgmi:
    command: usr/bin/dcgmi
    plugs:
      - network-bind
      - opengl
  nv-hostengine:
    command: bin/run_nv_hostengine.sh
    plugs:
      - network-bind
      - opengl
    daemon: simple
    restart-condition: on-abort
    environment:
      DCGM_HOME_DIR: "${SNAP_COMMON}"
  dcgmproftester10:
    command: usr/bin/dcgmproftester10
  dcgmproftester11:
    command: usr/bin/dcgmproftester11
  dcgmproftester12:
    command: usr/bin/dcgmproftester12

parts:
  # This is a workaround to package-repositories not supporting multiple architectures
  # See https://forum.snapcraft.io/t/can-package-repositories-depend-on-architecture/27820
  cuda-sources:
    plugin: nil
    source: snap/local/scripts
    override-pull: |
      craftctl default
      ./configure_sources.sh

  # This is the actual DCGM software. We don't build from source because the build
  # process is very cumbersome and requires docker
  # The deb is pulled from the sources configured in the cuda-sources part
  dcgm:
    after:
      - cuda-sources
    plugin: nil
    stage-packages: [datacenter-gpu-manager=1:3.3.7]
    # override prime to set version
    override-prime: |
      craftctl default
      # Locate dcgm .deb file
      DEB_FILE=$(ls $HOME/parts/dcgm/stage_packages/datacenter-gpu-manager_*.deb)

      # Extract the version from the .deb file
      DCGM_VERSION=$(dpkg-deb -f "$DEB_FILE" Version)

      # Set the Snap version to the same as dcgm deb file
      craftctl set version="${DCGM_VERSION#1:}"

  # This is the DCGM exporter
  dcgm-exporter:
    plugin: go
    build-snaps:
      - go
    source: https://github.com/NVIDIA/dcgm-exporter.git
    source-type: git
    source-tag: 3.3.7-3.5.0
    # override build to set custom csv file
    override-build: |
      craftctl default
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/dcgm-exporter
      cp etc/default-counters.csv etc/dcp-metrics-included.csv $SNAPCRAFT_PART_INSTALL/etc/dcgm-exporter/
      chmod +x run_dcgm_exporter.sh

  # nv-hostengine wrapper supporting snap options
  wrapper:
    plugin: dump
    source: snap/local/files
    organize:
      run_nv_hostengine.sh: bin/

layout:
  /etc/dcgm-exporter:
    symlink: $SNAP/etc/dcgm-exporter
