name: dcgm
base: core24
adopt-info: dcgm
summary: Snap for NVIDIA DCGM and DCGM exporter
license: Apache-2.0
contact: solutions-engineering@lists.canonical.com
description: |
  This snap includes NVIDIA DCGM and DCGM-exporter to monitor GPU via Prometheus metrics
  A use can setup a Grafana dashboard to visualize the metrics.

  The snap includes the following components:
  - DCGM: Data Center GPU Manager
  - DCGM-exporter: A Prometheus exporter for DCGM metrics
  - NV-Hostengine: A service that communicates with the NVIDIA GPU driver to get the metrics

  **Note**: The `DCGM-exporter` service is disabled by default because a user might not be interested
  in collecting metrics as this is a DCGM snap, not the DCGM-exporter snap.

  **Quick Start**
  ---
  Getting the NVIDIA GPU metrics would look like this:

  ```
  # Install the snap
  sudo snap install dcgm

  # Start the DCGM exporter service
  sudo snap start dcgm.dcgm-exporter

  # Get the metrics
  curl localhost:9400/metrics
  ```

  **Config**
  ---
  The DCGM snap provides several configuration options through the `snap` command.

  ```
  # Get all the configuration options
  sudo snap get dcgm

  # Example of setting the NV-Hostengine port
  sudo snap set dcgm nv-hostengine-port=5577

  # Restart the NV-Hostengine service to apply the changes
  sudo snap restart dcgm.nv-hostengine
  ```

  Available configs:
  - `nv-hostengine-port`: The port on which the NV-Hostengine listens.
    The default is `5555`.
  - `dcgm-exporter-address`: The bind address which the DCGM exporter exposes for the metrics.
    The default is `:9400`.
  - `dcgm-exporter-metrics-file`: The name of the custom CSV metrics file can be provided (only the name, not the path).
    The file should be placed in the `/var/snap/dcgm/common/` directory.
    The default metrics are located in `/snap/dcgm/current/etc/dcgm-exporter/default-counters.csv`.
    Please refer to the DCGM-exporter repository for more information on the CSV file format.

  **Limitations**
  ---
  As the DCGM components are packed in the snap, some features and configurations are not available.
  Please, report a missing feature or configuration.

  This snap does not include the `dcgmproftester`.

  **Links**
  ---
  Upstream DCGM-exporter repository
  https://github.com/NVIDIA/dcgm-exporter

  Upstream DCGM repository
  https://github.com/NVIDIA/DCGM

  Available NVIDIA GPU metrics
  https://docs.nvidia.com/datacenter/dcgm/latest/dcgm-api/dcgm-api-field-ids.html

platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]
grade: stable
confinement: strict
source-code: https://github.com/canonical/dcgm-snap
issues: https://github.com/canonical/dcgm-snap/issues
title: NVIDIA DCGM

apps:
  dcgm-exporter:
    command: bin/run_dcgm_exporter.sh
    plugs:
      - network-bind
      - opengl
    daemon: simple
    # As this is a dcgm snap, not the dcgm-exporter snap,
    # user might not be interested in running dcgm-exporter, so disable it by default
    install-mode: disable
    restart-condition: on-failure
  dcgmi:
    command: usr/bin/dcgmi
    plugs:
      - network-bind
      - opengl
  nv-hostengine:
    command: bin/run_nv_hostengine.sh
    plugs:
      - network-bind
      - opengl
    daemon: simple
    restart-condition: on-abort
    environment:
      DCGM_HOME_DIR: "${SNAP_COMMON}"

parts:
  # This is a workaround to package-repositories not supporting multiple architectures
  # See https://forum.snapcraft.io/t/can-package-repositories-depend-on-architecture/27820
  cuda-sources:
    plugin: nil
    source: snap/local/scripts
    override-pull: |
      craftctl default
      ./configure_sources.sh

  # This is the actual DCGM software. We don't build from source because the build
  # process is very cumbersome and requires docker
  # The deb is pulled from the sources configured in the cuda-sources part
  dcgm:
    after:
      - cuda-sources
    plugin: nil
    stage-packages: [datacenter-gpu-manager=1:3.3.7]
    # override prime to set version
    override-prime: |
      craftctl default
      # Locate dcgm .deb file
      DEB_FILE=$(ls $HOME/parts/dcgm/stage_packages/datacenter-gpu-manager_*.deb)

      # Extract the version from the .deb file
      DCGM_VERSION=$(dpkg-deb -f "$DEB_FILE" Version)

      # Set the Snap version to the same as dcgm deb file
      craftctl set version="${DCGM_VERSION#1:}"

      # Remove dcgmproftesters and related libraries
      $CRAFT_PROJECT_DIR/snap/local/scripts/remove_dcgmproftester.sh

  # This is the DCGM exporter
  dcgm-exporter:
    plugin: go
    build-snaps:
      - go
    source: https://github.com/NVIDIA/dcgm-exporter.git
    source-type: git
    source-tag: 3.3.7-3.5.0
    # override build to set custom csv file
    override-build: |
      craftctl default
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/dcgm-exporter
      cp etc/default-counters.csv etc/dcp-metrics-included.csv $SNAPCRAFT_PART_INSTALL/etc/dcgm-exporter/

  # wrappers supporting snap options
  wrapper:
    plugin: dump
    source: snap/local/files
    organize:
      run_nv_hostengine.sh: bin/
      run_dcgm_exporter.sh: bin/

layout:
  /etc/dcgm-exporter:
    symlink: $SNAP/etc/dcgm-exporter
